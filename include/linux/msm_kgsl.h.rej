--- include/linux/msm_kgsl.h
+++ include/linux/msm_kgsl.h
@@ -103,6 +114,8 @@
 	unsigned int sbz3;
 	volatile unsigned int ref_wait_ts;
 	unsigned int sbz4;
+	unsigned int current_context;
+	unsigned int sbz5;
 };
 
 #define KGSL_DEVICE_MEMSTORE_OFFSET(field) \
@@ -125,6 +138,7 @@
 	KGSL_PROP_SHMEM_APERTURES = 0x00000005,
 	KGSL_PROP_MMU_ENABLE 	  = 0x00000006,
 	KGSL_PROP_INTERRUPT_WAITS = 0x00000007,
+	KGSL_PROP_VERSION         = 0x00000008,
 };
 
 struct kgsl_shadowprop {
@@ -133,35 +147,55 @@
 	unsigned int flags; /* contains KGSL_FLAGS_ values */
 };
 
+
+
+struct kgsl_pwrlevel {
+  unsigned int gpu_freq;
+  unsigned int bus_freq;
+};
+
+struct kgsl_version {
+  unsigned int drv_major;
+  unsigned int drv_minor;
+  unsigned int dev_major;
+  unsigned int dev_minor;
+};
+
 #ifdef __KERNEL__
-#include <mach/msm_bus.h>
-
-struct kgsl_platform_data {
-	unsigned int high_axi_2d;
-	unsigned int high_axi_3d;
-	unsigned int max_grp2d_freq;
-	unsigned int min_grp2d_freq;
-	int (*set_grp2d_async)(void);
-	unsigned int max_grp3d_freq;
-	unsigned int min_grp3d_freq;
-	int (*set_grp3d_async)(void);
-	const char *imem_clk_name;
-	const char *imem_pclk_name;
-	const char *grp3d_clk_name;
-	const char *grp3d_pclk_name;
-	const char *grp2d0_clk_name;
-	const char *grp2d0_pclk_name;
-	const char *grp2d1_clk_name;
-	const char *grp2d1_pclk_name;
-	unsigned int idle_timeout_2d;
-	unsigned int idle_timeout_3d;
-	struct msm_bus_scale_pdata *grp3d_bus_scale_table;
-	struct msm_bus_scale_pdata *grp2d0_bus_scale_table;
-	struct msm_bus_scale_pdata *grp2d1_bus_scale_table;
+
+#define KGSL_3D0_REG_MEMORY  "kgsl_3d0_reg_memory"
+#define KGSL_3D0_IRQ    "kgsl_3d0_irq"
+#define KGSL_2D0_REG_MEMORY  "kgsl_2d0_reg_memory"
+#define KGSL_2D0_IRQ    "kgsl_2d0_irq"
+#define KGSL_2D1_REG_MEMORY  "kgsl_2d1_reg_memory"
+#define KGSL_2D1_IRQ    "kgsl_2d1_irq"
+
+struct kgsl_grp_clk_name {
+	const char *clk;
+	const char *pclk;
+};
+
+struct kgsl_device_pwr_data {
+	struct kgsl_pwrlevel pwrlevel[KGSL_MAX_PWRLEVELS];
+	int init_level;
+	int num_levels;
+	int (*set_grp_async)(void);
+	unsigned int idle_timeout;
 	unsigned int nap_allowed;
-	unsigned int pt_va_size;
-	unsigned int pt_max_count;
-	bool pwrrail_first;
+};
+
+struct kgsl_clk_data {
+	struct kgsl_grp_clk_name name;
+	struct msm_bus_scale_pdata *bus_scale_table;
+};
+
+struct kgsl_device_platform_data {
+	struct kgsl_device_pwr_data pwr_data;
+	struct kgsl_clk_data clk;
+	/* imem_clk_name is for 3d only, not used in 2d devices */
+	struct kgsl_grp_clk_name imem_clk_name;
+	const char *iommu_user_ctx_name;
+	const char *iommu_priv_ctx_name;
 };
 
 #endif
@@ -268,6 +305,15 @@
 };
 
 #define IOCTL_KGSL_CMDSTREAM_FREEMEMONTIMESTAMP \
+	_IOW(KGSL_IOC_TYPE, 0x12, struct kgsl_cmdstream_freememontimestamp)
+
+	/* Previous versions of this header had incorrectly defined
+	   IOCTL_KGSL_CMDSTREAM_FREEMEMONTIMESTAMP as a read-only ioctl instead
+	   of a write only ioctl.  To ensure binary compatability, the following
+	   #define will be used to intercept the incorrect ioctl
+	*/
+
+#define IOCTL_KGSL_CMDSTREAM_FREEMEMONTIMESTAMP_OLD \
 	_IOR(KGSL_IOC_TYPE, 0x12, struct kgsl_cmdstream_freememontimestamp)
 
 /* create a draw context, which is used to preserve GPU state.
